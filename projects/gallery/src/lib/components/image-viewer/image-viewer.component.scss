@import '../../core/mixins.scss';

:host {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  outline: none;
}

ul {
  display: flex;
  width: 100%;
  height: 100%;
  // touch-action: pan-y;

  &:not(.hidden) {
    transition-property: transform;
    transition-duration: 400ms;
  }

  &.hidden li:not(.initial-item) {
    opacity: 0;
  }

  // hide the scrollbar
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* Internet Explorer 10+ */
  &::-webkit-scrollbar {
    /* WebKit */
    width: 0;
    height: 0;
  }
}

li {
  display: flex;
  align-items: center;
  flex: none;
  position: relative;
  width: 100%;
  user-select: none;
}

img,
video,
iframe {
  width: 100%;
  height: 100%;
  background-color: transparent;
  transition: opacity 0.3s ease-out;
  outline: 0;

  &[src=''] {
    opacity: 0;
  }

  &.loading {
    opacity: 0.5;
  }
}

img {
  user-select: none;
  pointer-events: none;
}

.description-container {
  position: absolute;
  bottom: 5px;
  width: 100%;
  display: flex;
  justify-content: center;

  &.above-counter {
    bottom: 35px;
  }
}

.description {
  display: inline-block;
  background: #222;
  opacity: 0.8;
  color: #e3e3e3;
  padding: 6px 15px;
  letter-spacing: 0.04em;
  max-width: 80%;
  box-shadow: 0 0 2px black;
  text-align: center;
}

.error {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  background: #222;
  color: #e3e3e3;

  .icon {
    width: 40px;
    height: 40px;
    border: 4px solid #dc3d3d;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 38px;
    font-weight: 600;
    color: #dc3d3d;
  }

  .text {
    margin-top: 20px;
    letter-spacing: 0.04em;
  }
}

ngx-chevron-icon {
  $icon-dimension: 32px;

  display: flex;
  position: absolute;
  box-sizing: border-box;
  // center horizontally
  top: 50%;
  transform: translateY(-50%);
  z-index: 100;
  padding: 15px 6px;
  cursor: pointer;
  opacity: 0.6;

  @include supports-hover {
    &:hover {
      opacity: 1;
    }
  }

  &.prev {
    left: 0;
    transform: rotate(180deg) translateY(50%);
  }

  &.next {
    right: 0;
  }

  &::ng-deep svg {
    height: $icon-dimension;
    width: $icon-dimension;
  }
}
